package generic;


class Apple {
    public String toString() {
        return "I am an apple.";
    }    
}

class Orange {
    public String toString() {
        return "I am an orange.";
    }
}

class Box<T> {
    private T ob;

    public void set(T o) {
        ob = o;
    }
    public T get() {
        return ob;
    }
}

//제네릭 문법이 만들어져서  자바 1.5부터는 예전에 다형성적용(Object) 으로인한 형변환 및 실시간 에러 등을 컴파일 에러로 잡아 낼 수 있게됨.
//과거 실시간 에러가 컴파일 에러로 잡아 낼 수 있는 이유는?
//데이터 타입을 미리 정하고 들어감 > 핵심, 쓰는 이유
class FruitAndBox2_Generic {
    public static void main(String[] args) {
      
        
        Box<Integer> iBox = new Box<Integer>();
        iBox.set(125);
        int num = iBox.get();
        System.out.println(num);
        
        Box<String> sBox = new Box<> ();
        sBox.set("I am so happy");
        
        Box<Box<String>> wBox = new Box<>();
        wBox.set(sBox);
        
        Box<Box<Box<String>>> zBox = new Box<> ();
        zBox.set(wBox);
        
        System.out.println(zBox.get().get().get());
    }
}
