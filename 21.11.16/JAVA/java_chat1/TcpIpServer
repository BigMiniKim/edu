package java_chat;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Scanner;

public class TcpIpServer {
public static void main(String args[]) {
ServerSocket serverSocket = null;
Socket socket = null;

    try {
        // 서버소켓을 생성하여 7777번 포트와 결합(bind)시킨다.
        serverSocket = new ServerSocket(7777); // 클라이언트가 찾아가서 서버 7777을 돌려라. 프로그램번호.
        System.out.println("서버가 준비되었습니다.");

        socket = serverSocket.accept(); //기다리는 소스 누군가 들어오면 socket

        Sender   sender   = new Sender(socket); // 보내는 쪽. 쓰레드로 돌아야함. 아니면 한쪽만 돔.
        Receiver receiver = new Receiver(socket);// 받는 쪽

        sender.start(); //만약 쓰레드(동시에 하는게)가 아니라 sender.run()으로 돌리면 무한루프. 상대방이 받을 수 없다
        receiver.start();
    } catch (Exception e) {
        e.printStackTrace();
    }
} // main
} // class

class Sender extends Thread {
Socket socket; //serverSocket
DataOutputStream out;
String name;

Sender(Socket socket) { //Socket:통신을 위한걸 갖고 있다
    this.socket = socket;
    try {
    	//bout= new BufferedOutputStream(socket.getOutputStream());
    	//out = new DataOutputStream(bout)
        out = new DataOutputStream(socket.getOutputStream()); //보조스트림() server '>>>out>>>' client
        
        name = "["+socket.getInetAddress()+":"+socket.getPort()+"]"; //소켓이 갖고있는 IP, port 갖고 오기
    } catch(Exception e) {}
}

public void run() {
    Scanner scanner = new Scanner(System.in);
    while(out!=null) { //객체 주소가 있어서 끝내는 조건이 없음(계속 돔)
        try {
            out.writeUTF(name+scanner.nextLine());  // enter입력까지 대기중, enter 입력시 writeUTF 함수 시작. 
        } catch(IOException e) {}
    }
} // run()
}

class Receiver extends Thread {
Socket socket;
DataInputStream in;

Receiver(Socket socket) {
    this.socket = socket;
    try {
        in = new DataInputStream(socket.getInputStream()); // server '<<<< In <<<<<' client
    } catch(IOException e) {}

}

public void run() {
    while(in!=null) {
        try {
            System.out.println(in.readUTF()); //in.readUTF 상대방이 데이터를 넣어줄때까지(Enter) 기다림. enter시 sysout
        } catch(IOException e) {}
    }
} // run
}
