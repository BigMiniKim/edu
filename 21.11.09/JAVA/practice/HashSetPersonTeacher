mport java.util.HashSet;

class Num1  {
    private int num;
    
    public Num1(int n) {
        num = n;
    }

    @Override
    public String toString() {
        return String.valueOf(num);
    }

    //1.hashCode() - 해시 알고리즘 - 분류 한다(속도)
    //7de26db8
    /*
    @Override
    public int hashCode() {
    	System.out.println("걸렸다 이놈");
        return num % 3;
    }
    */
    
    //동등 비교를 위해 - true 면 동등 fasle 다름 : 이로직은 개발자가 짜야함
    @Override
    public boolean equals(Object obj) {
        if(this.num == ((Num1)obj).num)
            return true;
        else
            return false;
    } 
       
}

class Person1{
    private int age;
    private String name;
    
    
    public Person1(String name , int age) {
        this.age = age;
        this.name = name;           
    }

    @Override
    public String toString() {
    	return name+"("+age+"세)";
    }


    @Override
    public int hashCode() {
    	System.out.println("걸렸다 이놈");
        return age/10;
    }
    
       @Override
    public boolean equals(Object obj) {
    	
    	if(obj instanceof Person1) {
    		
    		Person1 person = (Person1) obj;
    		
    		if(person.name.equals(this.name) && this.age == person.age)
    			return true;
    		
    	}
    	
    	return false;
    	   
    	//if(this.age == ((Person1)obj).age && 
        //   this.name.equals(((Person1)obj).name))            
        //   return true;
        //else
        //    return false;
    } 
       
}

class HashSetEqualityTwo {
    public static void main(String[] args) {    
		HashSet<Person1> hSet = new HashSet<Person1>();
		
		hSet.add(new Person1("LEE", 10));
		hSet.add(new Person1("LEE", 10));
		hSet.add(new Person1("PARK", 35));
		hSet.add(new Person1("PARK", 35));

		System.out.println("저장된 데이터 수: " + hSet.size());
		System.out.println(hSet);
    }
}
